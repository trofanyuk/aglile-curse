@model BananaSocialNetwork.Models.User

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>User</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
    
            <div class="form-group">
                @Html.LabelFor(model => model.RegistrationDate, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RegistrationDate)
                    @Html.ValidationMessageFor(model => model.RegistrationDate)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Firstname)
                    @Html.ValidationMessageFor(model => model.Firstname)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Surname, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Surname)
                    @Html.ValidationMessageFor(model => model.Surname)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Age, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age)
                    @Html.ValidationMessageFor(model => model.Age)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Sex, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sex)
                    @Html.ValidationMessageFor(model => model.Sex)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Adress, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Adress)
                    @Html.ValidationMessageFor(model => model.Adress)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.AvatatPath, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AvatatPath)
                    @Html.ValidationMessageFor(model => model.AvatatPath)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.EmailConfirmed, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailConfirmed)
                    @Html.ValidationMessageFor(model => model.EmailConfirmed)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PasswordHash, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PasswordHash)
                    @Html.ValidationMessageFor(model => model.PasswordHash)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.SecurityStamp, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SecurityStamp)
                    @Html.ValidationMessageFor(model => model.SecurityStamp)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber)
                    @Html.ValidationMessageFor(model => model.PhoneNumber)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumberConfirmed, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumberConfirmed)
                    @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.TwoFactorEnabled, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TwoFactorEnabled)
                    @Html.ValidationMessageFor(model => model.TwoFactorEnabled)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.LockoutEndDateUtc, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LockoutEndDateUtc)
                    @Html.ValidationMessageFor(model => model.LockoutEndDateUtc)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.LockoutEnabled, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LockoutEnabled)
                    @Html.ValidationMessageFor(model => model.LockoutEnabled)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.AccessFailedCount, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccessFailedCount)
                    @Html.ValidationMessageFor(model => model.AccessFailedCount)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName)
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
